#!/bin/bash
HELPFILE=doc/Configure.help

if [ x"$(tail -n 1 $HELPFILE)" != x"" ]; then
  echo "" >> $HELPFILE
fi

function l_editor() {
  echo "launching editor for $1 ..."
  if [ -n "$EDITOR" ]; then
    $EDITOR +$2 $1
  elif [ -n "`which nano`" ]; then
    nano +$2 $1
  fi
}

menuconfig_warn() {
  echo "This is a helper script for menuconfig!"
  echo "You probably don't want to use it directly."
  exit 1
}

if [ "x$1" = "x" ]; then menuconfig_warn; fi

ITEM=$1; shift

response=`grep -n -e "^$ITEM" $HELPFILE`

if [ $? = 0 ]; then
  l_editor $HELPFILE `echo $response | sed -e '1!d;s/:.*//'`
  exit 0
fi

echo generate new item $ITEM ...
cat `find -name "*config*.in"` | grep -e bool | \
  sed -e 's/\$//g' -e 's/dep_bool_[^ ]*/dep_bool/' -e "s/\(['\"]\) */\1/" > DBlist
rm -f DBvars

# source the .config to enable editing of if [] hidden items
source .config


# generic function for all the text entries ...
function bool() {
  echo "$2='$1'" >> DBvars

  test "x$2" = "x$ITEM" || return
( echo "$1"; shift
  echo "$1"; shift

  echo ""
  echo "  Please add your new help-text here."
  echo "" ) >> $HELPFILE
} 

function int() { bool "$1" "$2"; }
function int_min_max_step() { bool "$1" "$2"; }
function editor() { bool "$1" "$2"; }
function hex() { bool "$1" "$2"; }
function string() { bool "$1" "$2"; }
function ipv4() { bool "$1" "$2"; }
function ipv6() { bool "$1" "$2"; }
function ip() { bool "$1" "$2"; }
function choice() { bool "$1" "$3"; }

function dep_bool() {
  echo "$2='$1'" >> DBvars
}

function dep_bool_menu() { dep_bool "$1" "$2"; }
function dep_bool_editor() { dep_bool "$1" "$2"; }

# ignore most of the other, mostly mentioned to not cause
# obscure stderr output ...
function define_bool() { true; }
function define_int() { true; }
function endmenu() { true; }
function comment() { true; }
function mainmenu_option() { true; }
function mainmenu_name() { true; }

#. ./DBlist
. ./config.in 2> /dev/null
. ./DBvars 2> /dev/null

# Debug stuff, dump the list found mappings to stdout ...
#echo =====
#sort DBvars
#echo =====

rm -f DBvars

# what a hack, sorry ...
y="<< nothing >>"
ROUTER_SUPPORT="Router support (enable several network interfaces!)"
IPV4_SUPPORT="IPv4 support"
PORTIO_SUPPORT="Full-featured I/O abstraction model (Port I/O)"

function bool() { true; }

function dep_bool() {
  test "x$2" = "x$ITEM" || return
  echo "$1"; shift
  echo "$1"; shift

  echo "  Depends on: "
  while test -n "$1"; do
    get_cmd='echo $'"$1"
    value="`eval $get_cmd`"

    echo "   * $value ($1)"
    shift
  done

  echo ""
  echo "  Please add your new help-text here."
  echo ""
}

. ./DBlist >> $HELPFILE
rm -f DBlist

l_editor $HELPFILE `wc -l $HELPFILE`
